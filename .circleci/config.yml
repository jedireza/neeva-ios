version: 2.1

commands:
  bootstrap:
    steps:
      - checkout
      - run:
          name: Checkout Submodules
          command: git submodule update --init --recursive
      - carthage-bootstrap
      - unset-clone-via-ssh
  restore-build-cache:
    steps:
      - bootstrap
      - restore_cache:
          name: Restore build cache
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
  carthage-bootstrap:
    steps:
      - run:
          name: Determine Xcode version
          command: echo "$(xcodebuild -version)" >| xcode_version
      - restore_cache:
          name: Restore Carthage/ cache
          key: carthage-dir-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "Cartfile.resolved" }}-v2
      - run:
          name: Bootstrap Carthage dependencies
          command: ./carthage_command.sh
      - save_cache:
          name: Save Carthage/ cache
          key: carthage-dir-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "Cartfile.resolved" }}-v2
          paths:
            - Carthage
  unset-clone-via-ssh:
    steps:
      - run:
          name: Unset cloning via SSH instead of HTTPS
          command: git config --global --unset url."ssh://git@github.com".insteadOf
  generate-user-scripts:
    steps:
      - run:
          name: Generate user scripts
          command: npm install && npm run build
  build-client:
    steps:
      - generate-user-scripts
      - run:
          name: Build Client
          command: xcodebuild build-for-testing -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12'
  build-xyzclient:
    steps:
      - generate-user-scripts
      - run:
          name: Build XYZ Client
          command: xcodebuild build-for-testing -scheme XYZClient -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12'
  build-codegen:
    steps:
       - run:
           name: Build Codegen
           command: xcodebuild build -scheme Codegen -workspace Neeva.xcworkspace -destination 'platform=macOS'
  build-swift-format:
    steps:
      - restore_cache:
          name: Restore swift-format cache
          key: swift-format-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "swift-format/Package.swift" }}
      - run:
          name: Build swift-format
          command: |
            cd swift-format
            swift build -c release
            cd ..
      - save_cache:
          name: Save swift-format cache
          key: swift-format-cache-{{ arch }}-{{ checksum "xcode_version" }}-{{ checksum "swift-format/Package.swift" }}
          paths:
            - swift-format/.build

  test-client:
    steps:
      - run:
          name: SharedTests
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing SharedTests
      - run:
          name: StorageTests
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing StorageTests
      - run:
          name: ClientTests
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing ClientTests
  ui-tests:
    steps:
      - run:
          name: UITests
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing UITests  -resultBundlePath uitests-$CIRCLE_BUILD_NUM.xcresult
      - run:
          name: "Store screenshots"
          command: ./Scripts/uitests-helper.sh move-iphone-screenshots
      - run:
          name: UITests - iPad
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPad Pro (11-inch) (3rd generation)' -only-testing UITests -resultBundlePath uitests-ipad-$CIRCLE_BUILD_NUM.xcresult
      - run:
          name: Zip Test Results
          command: ./Scripts/uitests-helper.sh store-artifacts
          when: always
      - save-artifacts
  xcui-tests:
    steps:
      - run:
          name: XCUITests
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing XCUITests -resultBundlePath xcuitests-$CIRCLE_BUILD_NUM.xcresult
      - store-xcuitest-artifact
  xcui-tests-ipad:
    steps:
      - run:
          name: XCUITests - iPad
          command: xcodebuild test-without-building -scheme Client -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPad Pro (11-inch) (3rd generation)' -only-testing XCUITests -resultBundlePath xcuitests-$CIRCLE_BUILD_NUM.xcresult
      - store-xcuitest-artifact

  store-xcuitest-artifact:
    steps:
      - run:
          name: Zip Test Results
          command: |
            mkdir artifacts
            zip -r artifacts/xcuitests-$CIRCLE_BUILD_NUM.xcresult.zip xcuitests-$CIRCLE_BUILD_NUM.xcresult
          when: always
      - save-artifacts
  build-app-clip:
    steps:
      - checkout
      - run:
          name: Build AppClip
          command: xcodebuild build-for-testing -scheme AppClip -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12'
  app-clip-tests:
    steps:
      - run:
          name: AppClipTests
          command: xcodebuild test-without-building -scheme AppClip -workspace Neeva.xcworkspace -destination 'platform=iOS Simulator,name=iPhone 12' -only-testing AppClipTests
  swift-format-check:
    steps:
      - run:
          name: Check Formatting
          command: ./Scripts/swift-format.sh --check-all --strict
  save-artifacts:
     steps:
       - store_artifacts:
           path: artifacts/
           when: always

jobs:
  build:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - bootstrap
      - build-codegen
      - build-client
      - build-xyzclient
      - save_cache:
          name: Save build cache
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/Library/Developer/Xcode/DerivedData
  swift-format:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - restore-build-cache
      - build-swift-format
      - swift-format-check
  test-client:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - restore-build-cache
      - test-client
      - build-app-clip
      - app-clip-tests
  ui-tests:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - restore-build-cache
      - ui-tests
  xcui-tests:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - restore-build-cache
      - xcui-tests
  xcui-tests-ipad:
    macos:
      xcode: "13.3.0"
    resource_class: macos.x86.medium.gen2
    steps:
      - restore-build-cache
      - xcui-tests-ipad

workflows:
  version: 2
  build:
    jobs:
      - build
      - swift-format:
          requires: [build]
      - test-client:
          requires: [build]
      - ui-tests:
          requires: [build]
      - xcui-tests:
          requires: [build]
          context: ios-testing
      - xcui-tests-ipad:
          requires: [build]
          context: ios-testing
